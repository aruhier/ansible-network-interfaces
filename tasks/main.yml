---

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
  - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
  - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
  - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
  - "{{ ansible_distribution | lower }}.yml"
  - "{{ ansible_os_family | lower }}.yml"
  tags:
  - always

- name: ensure basic networking tools are installed
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 86400
  when: network_interfaces
  with_items: "{{ network_interface_required_packages }}"

- name: configurations
  template:
    src: device.j2
    dest: "{{ network_interface_path }}/device-{{ item.0 }}"
    mode: "{{ network_interface_permissions }}"
  with_items:
  - "{{ network_interfaces | default([]) | groupby('device') }}"
  register: network_configuration_result
  notify:
  - network restart interface service
  - network restart interface command

- name: list existing files
  command: "find {{ network_interface_path }} -type f"
  changed_when: no
  register: network_existing_files

# depending on change the result stores dest or path
# check mode doesn't store any of those so use module args
- name: configured files
  set_fact:
    network_configured_files: >-
      [{% for item in network_configuration_result.results | default([]) -%}
        "{{ item.dest | default(item.path) | default(item.invocation.module_args.dest) }}"
        {{ '' if loop.last else ',' }}
      {%- endfor %}]

- include_tasks: all_interfaces.yml
  when: network_interfaces

- include_tasks: manage_devices.yml
  when:
  - network_manage_devices
  - network_interfaces
